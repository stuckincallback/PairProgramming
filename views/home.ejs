<%- include('layout'); -%>

<body>


    <div  class="mynk">

           
      <div id="div2"  >
            <button id = "cancelMatch" class="col-md-2" type="button"  onclick="cancelChallenge()">Leave CHallenge</button>

            
                
           
        
            <select id="mode" size="1" style="align-content: flex-start;    float: right; margin-top: 80px;">
                
                <option value="ace/mode/c_cpp" data-lang="10">c_cpp</option>
                                   
                <option value="ace/mode/csharp" data-lang="16">csharp</option>
                
                <option value="ace/mode/erlang" data-lang="21">erlang</option>
        
                <option value="ace/mode/golang" data-lang="22">golang</option>
              
                <option value="ace/mode/haskell" data-lang="23">haskell</option>
                
                <option value="ace/mode/java" data-lang="27">java</option>
                <option value="ace/mode/javascript" data-lang="29" selected>javascript</option>
                
                
                <option value="ace/mode/ocaml" data-lang="31">ocaml</option>
                <option value="ace/mode/pascal" data-lang="33">pascal</option>
               
                <option value="ace/mode/python" data-lang="34">python</option>
              
                <option value="ace/mode/ruby"data-lang="38">ruby</option>
                
                <option value="ace/mode/text" data-lang="43">text</option>
            </select>

      </div>
      <!-- class = "col-sm-6 col-md-4 col-md-offset-4" -->
        
    <div  id="div3" >
                     

                <% if (user) { %>  
                    <h1 class = "text-center login-title" >Welcome<b> <%= user.username%>.</b> Check your details below:</h1>
                <% } %> 
                    
                                       
    </div>
        <div id="div1" >
                <a href="/signout" style="align-content: flex-start; margin-left: 400px;color:black;">SignOut</a>
            <div class="clock" style="margin-bottom: 4px;" >
                            
                    <div class="digit tenmin">
                        <span class="base"></span>
                        <div class="flap over front"></div>
                        <div class="flap over back"></div>
                        <div class="flap under"></div>
                    </div>
                
                    <div class="digit min">
                        <span class="base"></span>
                        <div class="flap over front"></div>
                        <div class="flap over back"></div>
                        <div class="flap under"></div>
                    </div>
                    
                    <div class="digit tensec">
                        <span class="base"></span>
                        <div class="flap over front"></div>
                        <div class="flap over back"></div>
                        <div class="flap under"></div>
                    </div>
                
                    <div class="digit sec">
                        <span class="base"></span>
                        <div class="flap over front"></div>
                        <div class="flap over back"></div>
                        <div class="flap under"></div>
                    </div>
                    
                </div> 
        </div>
    </div>
    <div class = "col-md-4"></div>
    <div id = "wrapper">
        <div id="editor">
        </div>
        <div id="question" class = "scroll">
        </div>
        <div id="editor2">function foo(items) {
                var x = "All this is syntax highlighted";
                return x;
        }</div>
    </div> 
    <div id="buttons">
        <input id = "compile" type="button" name="Compile" value="compile" onclick="compile()"/>
        <input type="button" name="Submit" value="submit"  onclick="submit()"/>
        <input type="hidden" id="myField" name="text" value="{{this.text}}" />
    
        </div>   
<div id="result-wrapper">      
    <div id="result">
                <!-- <div class="loader">
                        <div class = "whitespace" id="status"></div>

                        </div> -->
                        <div class="container" style="align-items:flex-start" >   
                          
                                <button class="btn btn-primary" style="     color: #fff;
                                background-color: #08507800;
                                border-color: #007bff;">
                                <span class="spinner-border spinner-border-sm" id="status"></span>
                                
                                </button>
                            
                          </div>
                <div class="out">

                    <div class="out1" style="padding: 2px;"><b>Sample Input</b></div> 
                    <div class = "whitespace" id="sampleinput"></div>
                    <div class="out1"  style="padding: 2px"><b>Sample Output</b></div>
                    <div class = "whitespace" id="sampleoutput"></div>
                    <div class="out1" style="padding: 2px"><b>Your Output</b></div>
                    <div class = "whitespace" id="youroutput"></div>
                    <div class="out1" style="padding: 2px"><b>Opponent's Result</b></div>
                    <div class = "whitespace"><div class = "whitespace" id="opponentsResult"></div></div>
                
                </div>
                <div id="stacktrace" class = "whitespace"></div>
            </div>
 </div>            
        <div class="modal"></div>

<!-- The Modal -->
<div id="myModal" class="modalpopup">

        <!-- Modal content -->
        <div class="modalpopup-content">
                <div class="modalpopup-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modalpopup-title" id="myModalLabel">Challenge Request</h4>
                </div>
                <div class="modalpopup-body" id="popudbody">
                        ...
                </div>
                <div class="modalpopup-footer">
                        <button id = "accepted" type="button" class="btn btn-default" data-dismiss="modal" onclick="challengeAccepted()">Accept</button>
                        <button id = "rejected" type="button" class="btn btn-primary" onclick="challengeRejected()">Reject</button>
                </div>
        </div>
      
</div>
      
    <script>
        var socket;
        var langid;
        var editor;
        var editor2;
        var url ;
        //filter: blur(10px);
        $(document).ready(function(){

            $("#mode").change(function(){
                var element = $("option:selected", this);
                var myTag = element.attr("data-lang");
                 console.log(myTag);
                 langid=myTag;
                 console.log(element.val());
                 editor.session.setMode(element.val());
            })


            //$(".loader").hide()
            $(".clock").show();
            
            $("#opponentsResult").hide();
            $("#result").hide();
            $("#stacktrace").hide();
            $("#cancelMatch").hide();
            $('.container').hide();
            var data = {
                name: "",
                text:"",
                socketid:""
            }
            // var userName = "<%= user.username%>"; ask
            var userName = "<%= user.username%>";
            console.log(userName);
            $('#compile').bind("click",compile);
            socket = io.connect();
            console.log(socket.id);
            
            var text = "";
            
            var myId;
            socket.on('connect', function(){
                myId = socket.id;
                socket.emit('userConnected', {userName:userName, socketid:socket.id});
                editor = ace.edit("editor");
                editor.setTheme("ace/theme/monokai");
                editor.session.setMode("ace/mode/javascript");
                
                editor2 = ace.edit("editor2");
                editor2.setTheme("ace/theme/monokai");
                editor2.session.setMode("ace/mode/javascript");
                var text = '';             
                    editor.session.on('change', function(delta) {
                        console.log($(".clock").attr("data-inMatch"));
                        text = editor.getValue();
                        data.name =  "<%= user.username%>";
                        data.text = text;
                        data.socketid = socket.id;
                        //console.log(data);
                        if($(".clock").attr("data-inMatch") == 'true'){
                            socket.emit('codeInEditor', data);  
                        }
                     });
                
                socket.on('codeInOpponentsEditor', function(response)  {
                    //if(response.name != name)  {
                        editor2.setValue(response.text);
                    //}
                });
                    
                socket.on('newUserConnected', function(response)  {
                    console.log(response);
                    if($(".clock").attr("data-inMatch") == 'false')
                    {
                    $( "#question" ).empty();
                    response.userArray.forEach(element => {
                        //if(element.userName != userName){
                           // $('#question').append($("#batchInsert").html());
                            //$('#user-name').text(element.userName)
                            var $newdiv1 = $('<div class="chat-users">'+
                                                    '<div class="users-list">'+
                                                        '<div class="chat-user">'+
                                                        '<img class="chat-avatar" src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="">'+
                                                        '<div class="chat-user-name">'+
                                                            '<span>'+element.userName+'</span>'+
                                                            '<span class = pull-right>'+element.status+'</span>'+
                                                            '<Button class = "btn btn-primary btn-sm pull-right" onclick="connectToUser(this)" data-myid="'+element.socketid+'">Connect</Button>'+
                                                        '</div>'+
                                                    '</div>'+
                                                '<div>' );
                        $('#question').append($newdiv1);
                        //}
                    });
                }
                });

                socket.on('challengeReceived', function(response)  {
                    console.log(response);
                    $('#popudbody').text('Hi '+response.name+' wants to do programming with you')
                    $("#myModal").css("display", "block");
                });

                socket.on('challengeAccepted', function(response)  {
                    $('#clock').attr('data-inMatch', 'true');
                });

                socket.on('refreshUsersView', function(response)  {
                    console.log('In Match'+$("#clock").attr("data-inMatch"));
                    if($("#clock").attr("data-inMatch") == 'true'){

                    }else{
                        $( "#question" ).empty();
                        response.userArray.forEach(element => {
                            //if(element.userName != userName){
                            // $('#question').append($("#batchInsert").html());
                                //$('#user-name').text(element.userName)
                                var $newdiv1 = $('<div class="chat-users">'+
                                                        '<div class="users-list">'+
                                                            '<div class="chat-user">'+
                                                            '<img class="chat-avatar" src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="">'+
                                                            '<div class="chat-user-name">'+
                                                                '<span>'+element.userName+'</span>'+
                                                                '<span id = "userStatus"class = pull-right>'+element.status+'</span>'+
                                                                '<Button id= "connectBtn" class = "btn btn-primary btn-sm pull-right" onclick="connectToUser(this)" data-myid="'+element.socketid+'">Connect</Button>'+
                                                            '</div>'+
                                                        '</div>'+
                                                    '<div>' );
                            
                            $('#question').append($newdiv1);
                           
                        });
                        console.log($(" #question #userStatus"));
                        $(" #question #userStatus").each(function(){
                            if($(this).text() == 'InaMatch'){
                                //console.log($(this));
                                $(this).siblings("#connectBtn").attr("disabled", true)
                            }
                        });
                    }
                });

                socket.on('challengeCancelled', function(response){
                        $("#clockdiv").hide();
                        $("#cancelMatch").hide();
                        var filterVal = 'blur(0px)';
                        $('#editor2')
                        .css('filter',filterVal)
                        .css('webkitFilter',filterVal)
                        .css('mozFilter',filterVal)
                        .css('oFilter',filterVal)
                        .css('msFilter',filterVal);
                        $('#clock').attr('data-inMatch', 'false');
                });

                socket.on('hideSpinner', function(response)  {
                    hideSpinner();
                });

                socket.on('loadChallenge', function(response){
                    $('.clock').show();
                    $('.clock').attr('data-inMatch', 'true');
                    $("#result").show();
                    $("#cancelMatch").show();

                    var filterVal = 'blur(10px)';
                    $('#editor2')
                    .css('filter',filterVal)
                    .css('webkitFilter',filterVal)
                    .css('mozFilter',filterVal)
                    .css('oFilter',filterVal)
                    .css('msFilter',filterVal);

                    url = response.questionUrl;
                    console.log(url);
                    postData = {
                        url: url
                    }
                    $.ajax({
                        type: "POST",
                        url: "/problem",
                        data: postData,
                        success: loadChallenge,
                        dataType: 'json',
                        
                    });

                })
                socket.on('timesUp', function(response)  {
                    $("#opponentsResult").show();
                    var filterValue = $('#editor2').css('filter');
                    if(filterValue == 'blur(10px)'){
                        var filterVal = 'blur(0px)';
                        $('#editor2')
                        .css('filter',filterVal)
                        .css('webkitFilter',filterVal)
                        .css('mozFilter',filterVal)
                        .css('oFilter',filterVal)
                        .css('msFilter',filterVal);
                    }
                });

                socket.on('timer', function(response)  {
                    updateGroup('min', response.time.minutes, true);
                    updateGroup('sec', response.time.seconds, true);
                });
                socket.on('opponentsResult', function(response){
                    $("#opponentsResult").html(response);
                    console.log(response);
                });
            });//End of Socket Connection
       });//End of jquery

       function loadChallenge(data){
                        $("#myModal").css("display", "none");   
                        $("body").removeClass("loading");
                        $('#question').empty();
                        $('#question').html(data.statement);
                        $('#sampleinput').html(data.sampleInput);
                        $('#sampleoutput').html(data.sampleOutput);
       }
       function challengeRejected(){
                    $("#myModal").css("display", "none");
                    socket.emit('challengeRejected',{opponentSocketID:socket.id});
        } 
        function challengeAccepted(){
                        socket.emit('challengeAccepted',{opponentSocketID:socket.id});
        }

        function cancelChallenge(){
                        $("#clockdiv").hide();
                        $("#cancelMatch").hide();
                        var filterVal = 'blur(0px)';
                        $('#editor2')
                        .css('filter',filterVal)
                        .css('webkitFilter',filterVal)
                        .css('mozFilter',filterVal)
                        .css('oFilter',filterVal)
                        .css('msFilter',filterVal);
                        $('#clock').attr('data-inMatch', 'false');
                        socket.emit('cancleChallenge',{mySocketID:socket.id});
        }

       function compile(){
            $('#status').text("Compiling...");
            $('#compiling').text("compiling...");
            $('.container').show();
            let text = editor.getValue();
            let sampleInput = $('#sampleinput').text();
            let sampleOutput  = $('#sampleoutput').text();
            // $("#status").show().delay(5000).fadeOut();
            postData = {
                code: text,
                sampleInput: sampleInput,
                sampleOutput: sampleOutput,
                type:'compile',
                langid: langid
            }
            $.ajax({
                type: "POST",
                url: "/",
                data: postData,
                success: getCompileData,
                dataType: 'json'
            });
            //document.getElementById('myField').value = text;
            //console.log(document.getElementById('myField').value);
        }
        function getCompileData(data)  {
            $('.container').hide();
            console.log(data)
            $('#status').text(data.compileData.status);
            if(data.compileData.status == 'Accepted'){
                $('#youroutput').text(data.compileData.status).css({'font-size' : '20px','color':'green'});
            }else{
                $('#youroutput').text(data.compileData.status).css({'font-size' : '20px','color':'red'});
            }
        }

        function submit(){
            $('#status').text("Submitting...");
            $('.container').show();
            let text = editor.getValue();
            postData = {
                code: text,
                url: url,
                type:'submit',
                socketid: socket.id,
                langid: langid
            }
            $.ajax({
                type: "POST",
                url: "/",
                data: postData,
                success: getCompileData,
                dataType: 'json'
            });
        }
        function connectToUser(obj){
            var friendsId = obj.getAttribute('data-myid');
            var privateConnection ={
                name:"<%= user.username%>",
                challengerSocketID:socket.id,
                opponentSocketID:friendsId
            }
            $.ajax({
                type: "POST",
                url: "/connectToUser",
                data: privateConnection,
                success: responseFromFriend,
                beforeSend: showSpinner,
                complete: hideSpinner, 
                dataType: 'json'
            });
        }
        function showSpinner(){
            $body = $("body");
            $body.addClass("loading");
            //$( "#question" ).empty();
            //$('#question').append('<div class="loader"></div>');
            //$(".loader").show();
        }
        function hideSpinner(){
           // $(".loader").hide();
           setTimeout(()=>{$body.removeClass("loading");},2000)
        }0
        function responseFromFriend(data){

        }
        function flipTo(digit, n){
            var current = digit.attr('data-num');
            digit.attr('data-num', n);
            digit.find('.front').attr('data-content', current);
            digit.find('.back, .under').attr('data-content', n);
            digit.find('.flap').css('display', 'block');
            setTimeout(function(){
                digit.find('.base').text(n);
                digit.find('.flap').css('display', 'none');
            }, 350);
        }

        function jumpTo(digit, n){
            digit.attr('data-num', n);
            digit.find('.base').text(n);
        }

        function updateGroup(group, n, flip){
            var digit1 = $('.ten'+group);
            var digit2 = $('.'+group);
            n = String(n);
            if(n.length == 1) n = '0'+n;
            var num1 = n.substr(0, 1);
            var num2 = n.substr(1, 1);
            if(digit1.attr('data-num') != num1){
                if(flip) flipTo(digit1, num1);
                else jumpTo(digit1, num1);
            }
            if(digit2.attr('data-num') != num2){
                if(flip) flipTo(digit2, num2);
                else jumpTo(digit2, num2);
            }
        }

    </script>
    
          
      
</body>
</html>